// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql" // Puedes cambiar a "mysql", "sqlite", etc.
  url        = env("DATABASE_URL")
}

// =========================================================================
// Modelos de Autenticación y Usuarios
// =========================================================================

enum UserRole {
  USER        // Rol base para usuarios generales (e.g., técnicos)
  ADMIN       // Puede gestionar equipos, mantenimientos, etc., dentro de su empresa/sucursal
  MODERATOR   // Puede tener permisos intermedios, quizás sobre ciertos módulos o datos
  SUPER_ADMIN // Acceso total al sistema, gestión de empresas, usuarios, configuración global
}

enum PersonStatus {
  Activo
  Inactivo
}

model User {
  id                    String            @id @default(uuid())
  username              String            @unique
  email                 String            @unique
  password              String
  role                  UserRole          @default(USER)
  isActive              Boolean           @default(true)
  createdAt             DateTime          @default(now())
  updatedAt             DateTime          @updatedAt

  // Relación con Equipos (si un usuario es el "asignado" a un equipo)
  assignedEquipments    Equipment[]

  // Relación con Mantenimientos (si un usuario es el "técnico asignado")
  assignedMaintenances  Maintenance[]

  // Relación con la Empresa a la que pertenece el usuario
  companyId             String?
  company               Company?          @relation("CompanyUsers", fields: [companyId], references: [id])

  // Relación uno a uno con el modelo Person
  person                Person?

  // Relación para las compañías creadas por este usuario
  createdCompanies      Company[]         @relation("CompanyCreatedBy")

  // NEW: Relación con los dispositivos de red asignados a este usuario
  assignedNetworks      Network[]
}

model Person {
  id            String       @id @default(uuid())
  userId        String       @unique // foreign key to User
  user          User         @relation(fields: [userId], references: [id])
  firstName     String?
  lastName      String?
  fullName      String?      @unique
  contactEmail  String?      @unique
  phoneNumber   String?
  department    String?
  position      String?
  status        PersonStatus @default(Activo)
  userCode      String?      @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// =========================================================================
// Modelos de Empresas / Sucursales
// =========================================================================

model Company {
  id              String        @id @default(uuid())
  code            String        @unique @default("CO001")
  name            String        @unique
  address         String?
  phone           String?
  email           String?
  isActive        Boolean       @default(true)
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt

  // Explicitly name the relation for the user who created the company
  createdByUserId String?
  createdBy       User?         @relation("CompanyCreatedBy", fields: [createdByUserId], references: [id])

  equipments      Equipment[]
  // Explicitly name the relation for users belonging to this company
  users           User[]        @relation("CompanyUsers")
  documents       Document[]
  licenses        License[]
  maintenances    Maintenance[]
  // NEW: Relación con los dispositivos de red de esta compañía
  networks        Network[]
}

// =========================================================================
// Modelos de Inventario de Equipos
// =========================================================================

enum EquipmentStatus {
  ACTIVE
  IN_MAINTENANCE
  DISPOSED
  DAMAGED
  ASSIGNED
  STORAGE
}

model Equipment {
  id               String          @id @default(uuid())
  type             String
  brand            String
  model            String
  serialNumber     String          @unique
  plateNumber      String?         @unique
  location         String?
  status           EquipmentStatus @default(ACTIVE)
  acquisitionDate  DateTime?
  warrantyDetails  String?
  qrCode           String?

  createdAt        DateTime        @default(now())
  updatedAt        DateTime        @updatedAt

  companyId        String
  company          Company         @relation(fields: [companyId], references: [id])

  assignedToUserId String?
  assignedToUser   User?           @relation(fields: [assignedToUserId], references: [id])

  maintenances     Maintenance[]
  documents        Document[]
}

// =========================================================================
// Modelos de Mantenimiento
// =========================================================================

enum MaintenanceType {
  PREVENTIVE
  CORRECTIVE
}

enum MaintenanceStatus {
  SCHEDULED
  IN_PROGRESS
  COMPLETED
  CANCELED
}

model Maintenance {
  id               String            @id @default(uuid())
  title            String
  description      String?
  type             MaintenanceType
  status           MaintenanceStatus @default(SCHEDULED)
  scheduledDate    DateTime
  completionDate   DateTime?
  cost             Decimal?          @default(0.00)

  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt

  equipmentId      String
  equipment        Equipment         @relation(fields: [equipmentId], references: [id])

  assignedToUserId String?
  assignedToUser   User?             @relation(fields: [assignedToUserId], references: [id])

  companyId        String
  company          Company           @relation(fields: [companyId], references: [id])
}

// =========================================================================
// Modelos de Documentos y Facturas
// =========================================================================

model Document {
  id          String     @id @default(uuid())
  title       String
  description String?
  fileUrl     String
  fileType    String?
  category    String?

  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt

  companyId   String
  company     Company    @relation(fields: [companyId], references: [id])

  equipmentId String?
  equipment   Equipment? @relation(fields: [equipmentId], references: [id])
}

// =========================================================================
// Modelos de Licencias de Software
// =========================================================================

model License {
  id             String    @id @default(uuid())
  softwareName   String
  licenseKey     String    @unique
  provider       String?
  activationDate DateTime
  expirationDate DateTime?
  notes          String?

  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt

  companyId      String
  company        Company   @relation(fields: [companyId], references: [id])
}

// =========================================================================
// Modelos de Configuración General (Opcional, si hay configuraciones a nivel de sistema)
// =========================================================================

model SystemConfig {
  id          String   @id @default(uuid())
  key         String   @unique
  value       String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

// =========================================================================
// Modelos de Inventario de Red (Network)
// =========================================================================

enum NetworkDeviceType {
  ROUTER
  SWITCH
  FIREWALL
  ACCESS_POINT
  SERVER
  PRINTER
  IP_PHONE
  CAMERA
  OTHER
}

enum NetworkDeviceStatus {
  ONLINE
  OFFLINE
  MAINTENANCE
  DECOMMISSIONED
  UNKNOWN
}

model Network {
  id               String              @id @default(uuid())
  name             String
  ipAddress        String              @unique // IP address or hostname
  macAddress       String?             @unique
  deviceType       NetworkDeviceType   @default(OTHER)
  status           NetworkDeviceStatus @default(UNKNOWN)
  location         String?             // Physical location within the company/branch
  description      String?
  serialNumber     String?             @unique // Optional: if applicable to the device
  model            String?
  brand            String?
  purchaseDate     DateTime?
  warrantyEndDate  DateTime?
  notes            String?

  createdAt        DateTime            @default(now())
  updatedAt        DateTime            @updatedAt

  companyId        String
  company          Company             @relation(fields: [companyId], references: [id])

  // Optional: If a network device can be assigned to a specific user
  assignedToUserId String?
  assignedToUser   User?               @relation(fields: [assignedToUserId], references: [id])

  // Optional: Link to an Equipment if it's also considered a general asset
  // equipmentId      String?
  // equipment        Equipment?          @relation(fields: [equipmentId], references: [id])
}